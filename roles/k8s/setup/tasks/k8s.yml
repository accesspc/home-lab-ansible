---

- name: set_fact - k8s_apt_version
  set_fact:
    k8s_apt_version: "{{ k8s.version }}-1.1"

- name: set_fact - k8s_release
  set_fact:
    k8s_release: "{{ k8s.version | regex_replace('^(.*)\\.\\d+$', '\\1') }}"

# Get kubernetes repo GPG key
- name: get_url - k8s key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v{{ k8s_release }}/deb/Release.key
    dest: /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.asc
  when: "ansible_distribution == 'Ubuntu'"

# Create kubernetes repo
- name: apt_repository - k8s
  apt_repository:
    repo: deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ k8s_release }}/deb/ /
    filename: kubernetes
    state: present
  when: "ansible_distribution == 'Ubuntu'"

- name: template - yum kubernetes repo
  template:
    src: etc/yum.repos.d/kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo
  when: "ansible_distribution == 'RedHat'"

# Install kube packages
- name: apt - k8s packages
  apt:
    pkg:
      - kubeadm={{ k8s_apt_version }}
      - kubectl={{ k8s_apt_version }}
      - kubelet={{ k8s_apt_version }}
    state: present
    update_cache: true
  when: "ansible_distribution == 'Ubuntu'"

- name: yum - kubeadm
  yum:
    name:
      - kubeadm-{{ k8s.version }}
      - kubectl-{{ k8s.version }}
      - kubelet-{{ k8s.version }}
      - nfs-utils
    state: present
  when: "ansible_distribution == 'RedHat'"

# Install nfs package to support nfs mounts
- name: apt - nfs-common
  apt:
    pkg:
      - nfs-common
    state: present
    update_cache: true
  when: "ansible_distribution == 'Ubuntu'"

- name: yum - nfs-utils
  yum:
    name:
      - nfs-utils
    state: present
  when: "ansible_distribution == 'RedHat'"

# Hold kube packages
- name: dpkg_selections - hold
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubeadm
    - kubectl
    - kubelet
  when: "ansible_distribution == 'Ubuntu'"

# Systemd kubelet
- name: systemd - kubelet
  systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: restarted
