---

# Get docker repo GPG key
- name: Get_url - docker gpg apt_key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: 0644
    force: true
  when: "ansible_distribution == 'Ubuntu'"

# Create docker repo
- name: Apt_repository - docker
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    filename: docker
    state: present
    update_cache: true
  when: "ansible_distribution == 'Ubuntu'"

- name: copy - docker repo
  copy:
    src: etc/yum.repos.d/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  when: "ansible_distribution == 'RedHat'"

# Install containerd.io
- name: Apt - containerd.io package
  ansible.builtin.apt:
    pkg:
      - containerd.io
    state: present
  when: "ansible_distribution == 'Ubuntu'"

- name: Yum - containerd.io package
  ansible.builtin.yum:
    name: containerd.io
    state: present
  when: "ansible_distribution == 'RedHat'"

# Systemd containerd
- name: Systemd - containerd
  ansible.builtin.systemd:
    name: containerd
    daemon_reload: true
    enabled: true
    state: restarted

# mkdir
- name: File - /etc/containerd
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: 0755
  when: "ansible_distribution == 'Ubuntu'"

# Generate default config file
- name: Shell - containerd config default | sed 's/SystemdCgroup =.*/SystemdCgroup = {{ lookup('ansible.builtin.vars', 'k8s_cgroup_' + ansible_distribution) }}/g' > /etc/containerd/config.toml
  ansible.builtin.shell: containerd config default | sed 's/SystemdCgroup =.*/SystemdCgroup = {{ lookup('ansible.builtin.vars', 'k8s_cgroup_' + ansible_distribution) }}/g' > /etc/containerd/config.toml
  when: "ansible_distribution == 'RedHat'"
