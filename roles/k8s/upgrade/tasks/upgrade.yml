---

# Set k8s_release
- name: Set_fact - k8s_release
  ansible.builtin.set_fact:
    k8s_release: "{{ k8s_upgrade_version | regex_replace('^(.*)\\.\\d+$', '\\1') }}"

# Update yum repo
- name: Template - yum kubernetes repo
  ansible.builtin.template:
    src: ../../setup/templates/etc/yum.repos.d/kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo
    mode: "0644"
  when: "ansible_distribution == 'RedHat'"

# Update kubeadm
- name: Yum - kubeadm
  ansible.builtin.yum:
    name: kubeadm-{{ k8s_upgrade_version }}
    state: present

# kubeadm pgrade plan
- name: Shell - kubeadm upgrade plan v{{ k8s_upgrade_version }}
  ansible.builtin.shell: kubeadm upgrade plan v{{ k8s_upgrade_version }}
  register: kubeadm_upgrade_plan
  when: "ansible_host == groups['control'][0]"

- debug: msg={{ kubeadm_upgrade_plan }}

# kubeadm upgrade
- name: Shell - kubeadm upgrade apply v{{ k8s_upgrade_version }} -y
  ansible.builtin.shell: kubeadm upgrade apply v{{ k8s_upgrade_version }} -y
  register: kubeadm_upgrade
  when: "ansible_host == groups['control'][0]"

- name: Shell - kubeadm upgrade node
  ansible.builtin.shell: kubeadm upgrade node
  register: kubeadm_upgrade
  when: "ansible_host != groups['control'][0]"

- debug: msg={{ kubeadm_upgrade }}

# kubectl drain node
- name: Shell - kubectl drain {{ ansible_host }} --ignore-daemonsets --delete-emptydir-data
  ansible.builtin.shell: kubectl drain {{ ansible_host }} --ignore-daemonsets --delete-emptydir-data
  delegate_to: "{{ groups['control'][0] }}"
  register: kubeadm_drain

- debug: msg={{ kubeadm_drain }}

# Update kubectl kubelet
- name: Yum - kubectl kubelet
  ansible.builtin.yum:
    name:
      - kubectl-{{ k8s_upgrade_version }}
      - kubelet-{{ k8s_upgrade_version }}
    state: present

# Systemd restart kubelet
- name: Systemd - kubelet
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: restarted

# kubectl uncordon
- name: Shell - kubectl uncordon {{ ansible_host }}
  ansible.builtin.shell: kubectl uncordon {{ ansible_host }}
  delegate_to: "{{ groups['control'][0] }}"
  register: kubeadm_uncordon

- debug: msg={{ kubeadm_uncordon }}
